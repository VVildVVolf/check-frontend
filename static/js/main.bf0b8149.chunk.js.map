{"version":3,"sources":["controls/CheckBox.tsx","controls/Tab.tsx","pages/Numbers/NumbersPage.tsx","pages/Messaging/MessagingPage.tsx","pages/Reporting/ReportingPage.tsx","pages/ApiKeys/ApiKeysPage.tsx","routes.tsx","navigation/Navigation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CheckboxComponent","props","handleChange","bind","checkedIndex","this","defaultCheckedIndex","items","options","map","item","index","type","value","className","name","id","autoComplete","defaultChecked","htmlFor","role","onChange","e","selectedIndex","target","React","Component","TabComponent","state","selected","defaultSelected","handleClick","tabsList","v","i","onClick","_","setState","NumbersPage","tabs","numbersTabIndex","defaultSelectedIndex","defaultTollIndex","defaultRadiobutton","selectedTabIndex","selectedTollIndex","handleChangeTab","handleChangeRadioButton","xmlns","width","height","fill","viewBox","d","JSON","stringify","selectedTab","selectedToll","MessagingPage","ReportingPage","ApiKeysPage","NumbersRoute","Path","VisiblePhrase","flaticonClass","routes","defaultPage","Navigation","location","useLocation","elements","r","classname","pathname","to","App","pages","path","exact","process","href","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf0b8149.chunk.js","sourcesContent":["import React from \"react\";\nimport { Fragment } from \"react\";\n\nexport interface ICheckboxComponentProps {\n    // TODO: implement generic options, possibly key-value paired\n    options: string[];\n    defaultCheckedIndex?: number;\n    onChange?:(index:number) => void;\n    name?: string;\n}\n\nexport class CheckboxComponent extends React.Component<ICheckboxComponentProps> {\n    constructor(props: ICheckboxComponentProps) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    public render() {\n        const checkedIndex = this.props.defaultCheckedIndex ? this.props.defaultCheckedIndex : 0;\n        const items = this.props.options.map((item, index) => <Fragment key={item}>\n            <input type=\"radio\" value={index} className=\"btn-check\" name={this.props.name} id={this.props.name + item} autoComplete=\"off\" defaultChecked={index == checkedIndex} />\n            <label className=\"btn btn-outline-primary\" htmlFor={this.props.name + item}>{item}</label>\n        </Fragment>);\n        return (\n        <div>\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic radio toggle button group\" onChange={this.handleChange}>\n                {items}\n            </div>\n        </div>);\n    }\n\n    private handleChange(e: any):void {\n        if (this.props.onChange) {\n            let selectedIndex = e.target.value as number\n            this.props.onChange(selectedIndex);\n        }\n    }\n}\n","import React from \"react\";\nimport { ReactNode } from \"react\";\n\nexport interface ITabComponentProps {\n    onChange?: (index: number) => void;\n    defaultSelected?: number;\n    tabsList: string[];\n}\n\ninterface ITabComponentState {\n    selected: number;\n}\n\nexport class TabComponent extends React.Component<ITabComponentProps, ITabComponentState> {\n    constructor(props: ITabComponentProps) {\n        super(props);\n        this.state = { selected: props.defaultSelected ? props.defaultSelected : 0 };\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    public render():ReactNode {\n        const selected = this.state.selected;\n        const items = this.props.tabsList.map((v,i) => (\n            <li key={v} className=\"nav-item\">\n                <button className={\"nav-link\" + (i === selected ? \" active\" : \"\")} aria-current=\"page\" onClick={(_:any) => this.handleClick(i)}>{v}</button>\n            </li>\n        ));\n        return <ul className=\"nav nav-pills\">{items}</ul>;\n    }\n\n    private handleClick(selected: number): void{\n        this.setState({selected: selected});\n        if (this.props.onChange) {\n            this.props.onChange(selected);\n        }\n    }\n}","import React, { Fragment, ReactNode } from 'react';\nimport { CheckboxComponent } from '../../controls/CheckBox';\nimport { TabComponent } from '../../controls/Tab';\nimport \"./NumbersPage.css\"\n\ninterface INumbersPageState {\n    get selectedTabIndex():number;\n    get selectedTollIndex(): number;\n}\n\nexport class NumbersPage extends React.Component<{}, INumbersPageState> {\n    constructor(props: Readonly<{}>) {\n        super(props);\n\n        this.state = {selectedTabIndex: this.defaultSelectedIndex, selectedTollIndex: this.defaultTollIndex};\n\n        this.handleChangeTab = this.handleChangeTab.bind(this);\n        this.handleChangeRadioButton = this.handleChangeRadioButton.bind(this);\n    }\n\n    public render(): ReactNode {\n        return (\n        <div className=\"numbers-page container\">\n            <div className=\"row\">\n                <TabComponent onChange={this.handleChangeTab} tabsList={this.tabs} defaultSelected={this.state.selectedTabIndex}></TabComponent>\n                <hr />\n            </div>\n            { this.state.selectedTabIndex === this.numbersTabIndex &&\n            <Fragment>\n                <div className=\"row toll\">\n                    <CheckboxComponent options={this.options} name=\"defaultName\" onChange={this.handleChangeRadioButton} defaultCheckedIndex={this.state.selectedTollIndex}></CheckboxComponent>\n                </div>\n                <div className=\"top-buffer row\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            Search by:\n                        </div>\n                    </div>\n                </div>\n                <div className=\"top-buffer row\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            List\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n            }\n\n            <hr />\n            <div className=\"row\">\n                <div className=\"alert alert-primary d-flex align-items-center\" role=\"alert\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"currentColor\" className=\"bi bi-exclamation-triangle-fill flex-shrink-0 me-2\" viewBox=\"0 0 16 16\" role=\"img\" aria-label=\"Warning:\">\n                        <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\"/>\n                    </svg>\n                    <div>\n                        {JSON.stringify({selectedTab: this.tabs[this.state.selectedTabIndex], selectedToll: this.options[this.state.selectedTollIndex]})}\n                    </div>\n                </div>\n            </div>\n            <hr />\n        </div>);\n    }\n\n\n    private readonly tabs = [\"Purchase Numbers\", \"My numbers\", \"Hosted messaging\"];\n    private readonly  options = [\"10 DLC\", \"Toll free\"];\n\n    private readonly numbersTabIndex = 0;\n    private readonly defaultSelectedIndex = this.numbersTabIndex;\n\n    private readonly defaultTollIndex = 0;\n    private handleChangeTab(selectedTabIndex: number): void {\n        this.setState({selectedTabIndex: selectedTabIndex});\n    }\n\n    private handleChangeRadioButton(selectedIndex: number): void {\n        this.setState({selectedTollIndex: selectedIndex});\n    }\n\n    private readonly defaultRadiobutton = 0;\n}\n\nexport default NumbersPage;","function MessagingPage(){\n    return <div>Messaging page</div>;\n}\n\nexport default MessagingPage;","function ReportingPage(){\n    return <div>Reporting page</div>;\n}\n\nexport default ReportingPage;","function ApiKeysPage(){\n    return <div>API Keys page</div>;\n}\n\nexport default ApiKeysPage;","import React from 'react';\nimport NumbersPage from './pages/Numbers/NumbersPage';\nimport MessagingPage from './pages/Messaging/MessagingPage';\nimport ReportingPage from './pages/Reporting/ReportingPage';\nimport ApiKeysPage from './pages/ApiKeys/ApiKeysPage';\n\ninterface IPageDescription {\n    get Path(): string;\n    // todo: define the type\n    get Component(): any;\n    get VisiblePhrase(): string;\n    get flaticonClass(): string;\n}\n\nconst NumbersRoute: IPageDescription = {\n    Path: \"/numbers\",\n    Component: <NumbersPage></NumbersPage>,\n    VisiblePhrase: \"Numbers\",\n    flaticonClass: \"flaticon flaticon-phone-keyboard-buttons\"\n}\n\nconst MessagingRoute: IPageDescription = {\n    Path: \"/messaging\",\n    Component: <MessagingPage></MessagingPage>,\n    VisiblePhrase: \"Messaging\",\n    flaticonClass: \"flaticon flaticon-message\"\n}\n\nconst ReportingRoute: IPageDescription = {\n    Path: \"/reporting\",\n    Component: <ReportingPage></ReportingPage>,\n    VisiblePhrase: \"Reporting\",\n    flaticonClass: \"flaticon flaticon-check-list\"\n}\n\nconst ApiKeysRoute: IPageDescription = {\n    Path: \"/apiKeys\",\n    Component: <ApiKeysPage></ApiKeysPage>,\n    VisiblePhrase: \"API Keys\",\n    flaticonClass: \"flaticon flaticon-door-key\"\n}\n\nconst routes: IPageDescription[] = [ NumbersRoute, MessagingRoute, ReportingRoute, ApiKeysRoute];\nconst defaultPage: IPageDescription = NumbersRoute;\n\nexport type { IPageDescription };\nexport { routes, defaultPage };","import { Link, useLocation } from 'react-router-dom';\n\nimport {routes} from '../routes';\n\nimport './Navigation.css';\n\nfunction Navigation(props: any){\n    const location = useLocation();\n    const elements = routes.map(r =>{\n        const classname = \"nav-link\" + (location.pathname === r.Path ? \" active\" : \"\");\n        return (<li key={r.Path} className=\"nav-item\"><Link to={r.Path} className={classname}><i className={r.flaticonClass}></i> {r.VisiblePhrase}</Link></li>);})\n    return (\n    <div className=\"navigation\">\n        <label>PLATFORM</label>\n        <nav>\n            <ul className=\"nav flex-column\">{elements}</ul>\n        </nav>\n    </div>);\n}\n\nexport default Navigation;","import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport { routes, defaultPage } from './routes';\nimport './App.css';\n\nimport Navigation from './navigation/Navigation';\n\nfunction App() {\n  const pages: any[] = routes.map(r => <Route key={r.Path} path={r.Path}>{r.Component}</Route>);\n  const title = \"Numbers\";\n  return (\n    <Router>\n      <div className=\"App container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <h3>algorithm</h3>\n          </div>\n          <div className=\"col\">\n            <h3>{title}</h3>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <Navigation></Navigation>\n          </div>\n          <div className=\"col\">\n            <Switch>\n              {pages}\n              <Route exact path=\"/\">\n                <Redirect to={defaultPage.Path} />\n              </Route>\n              <Route exact path={process.env.PUBLIC_URL}>\n                <Redirect to={defaultPage.Path} />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        <footer className=\"row border-top\">\n          <div className=\"col-6 hidden\"></div>\n          <div className=\"col-6\">\n            <div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n          </div>\n        </footer>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}