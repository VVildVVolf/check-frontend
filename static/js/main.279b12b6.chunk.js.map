{"version":3,"sources":["controls/Tab.tsx","pages/Numbers/NumbersPage.tsx","pages/Messaging/MessagingPage.tsx","pages/Reporting/ReportingPage.tsx","pages/ApiKeys/ApiKeysPage.tsx","routes.tsx","navigation/Navigation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TabComponent","props","state","selected","defaultSelected","handleClick","bind","this","items","tabsList","map","v","i","className","onClick","_","setState","onChange","React","Component","CheckboxComponent","handleChange","checkedIndex","defaultCheckedIndex","options","item","index","type","value","name","id","autoComplete","defaultChecked","htmlFor","role","e","selectedIndex","target","NumbersPage","numbersTabIndex","defaultSelectedIndex","defaultTollIndex","defaultRadiobutton","selectedTabIndex","selectedTollIndex","handleChangeTab","handleChangeRadioButton","JSON","stringify","selectedTab","selectedToll","MessagingPage","ReportingPage","ApiKeysPage","NumbersRoute","Path","VisiblePhrase","flaticonClass","routes","defaultPage","Navigation","location","useLocation","elements","r","classname","pathname","to","App","pages","path","exact","process","href","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.279b12b6.chunk.js","sourcesContent":["import React from \"react\";\nimport { ReactNode } from \"react\";\n\nexport interface ITabComponentProps {\n    onChange?: (index: number) => void;\n    defaultSelected?: number;\n    tabsList: string[];\n}\n\ninterface ITabComponentState {\n    selected: number;\n}\n\nexport class TabComponent extends React.Component<ITabComponentProps, ITabComponentState> {\n    constructor(props: ITabComponentProps) {\n        super(props);\n        this.state = { selected: props.defaultSelected ? props.defaultSelected : 0 };\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    public render():ReactNode {\n        const selected = this.state.selected;\n        const items = this.props.tabsList.map((v,i) => (\n            <li key={v} className=\"nav-item\">\n                <button className={\"nav-link\" + (i === selected ? \" active\" : \"\")} aria-current=\"page\" onClick={(_:any) => this.handleClick(i)}>{v}</button>\n            </li>\n        ));\n        return <ul className=\"nav nav-pills\">{items}</ul>;\n    }\n\n    private handleClick(selected: number): void{\n        this.setState({selected: selected});\n        if (this.props.onChange) {\n            this.props.onChange(selected);\n        }\n    }\n}","import React, { Fragment, ReactNode } from 'react';\nimport { TabComponent } from '../../controls/Tab';\nimport \"./NumbersPage.css\"\n\nexport interface ICheckboxComponentProps {\n    // TODO: implement generic options, possibly key-value paired\n    options: string[];\n    defaultCheckedIndex?: number;\n    onChange?:(index:number) => void;\n    name?: string;\n}\n\nexport class CheckboxComponent extends React.Component<ICheckboxComponentProps> {\n    constructor(props: ICheckboxComponentProps) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    public render() {\n        const checkedIndex = this.props.defaultCheckedIndex ? this.props.defaultCheckedIndex : 0;\n        const items = this.props.options.map((item, index) => <Fragment key={item}>\n            <input type=\"radio\" value={index} className=\"btn-check\" name={this.props.name} id={this.props.name + item} autoComplete=\"off\" defaultChecked={index == checkedIndex} />\n            <label className=\"btn btn-outline-primary\" htmlFor={this.props.name + item}>{item}</label>\n        </Fragment>);\n        return (\n        <div>\n            <div className=\"btn-group\" role=\"group\" aria-label=\"Basic radio toggle button group\" onChange={this.handleChange}>\n                {items}\n            </div>\n        </div>);\n    }\n\n    private handleChange(e: any):void {\n        if (this.props.onChange) {\n            let selectedIndex = e.target.value as number\n            this.props.onChange(selectedIndex);\n        }\n    }\n}\n\ninterface INumbersPageState {\n    get selectedTabIndex():number;\n    get selectedTollIndex(): number;\n}\n\nexport class NumbersPage extends React.Component<{}, INumbersPageState> {\n    constructor(props: Readonly<{}>) {\n        super(props);\n\n        this.state = {selectedTabIndex: this.defaultSelectedIndex, selectedTollIndex: this.defaultTollIndex};\n\n        this.handleChangeTab = this.handleChangeTab.bind(this);\n        this.handleChangeRadioButton = this.handleChangeRadioButton.bind(this);\n    }\n\n    public render(): ReactNode {\n        const tabs = [\"Purchase Numbers\", \"My numbers\", \"Hosted messaging\"];\n        const options = [\"10 DLC\", \"Toll free\"];\n\n        return (\n        <div className=\"numbers-page container\">\n            <div className=\"row\">\n                <TabComponent onChange={this.handleChangeTab} tabsList={tabs} defaultSelected={this.state.selectedTabIndex}></TabComponent>\n                <hr />\n            </div>\n            { this.state.selectedTabIndex === this.numbersTabIndex &&\n            <Fragment>\n                <div className=\"row toll\">\n                    <CheckboxComponent options={options} name=\"defaultName\" onChange={this.handleChangeRadioButton} defaultCheckedIndex={this.state.selectedTollIndex}></CheckboxComponent>\n                </div>\n                <div className=\"top-buffer row\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            Search by:\n                        </div>\n                    </div>\n                </div>\n                <div className=\"top-buffer row\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            List\n                        </div>\n                    </div>\n                </div>\n            </Fragment>\n            }\n\n            <hr />\n            <div className=\"row\">\n                {JSON.stringify({selectedTab: this.state.selectedTabIndex, selectedToll: this.state.selectedTollIndex})}\n            </div>\n            <hr />\n        </div>);\n    }\n\n    private readonly numbersTabIndex = 0;\n    private readonly defaultSelectedIndex = this.numbersTabIndex;\n\n    private readonly defaultTollIndex = 0;\n    private handleChangeTab(selectedTabIndex: number): void {\n        this.setState({selectedTabIndex: selectedTabIndex});\n    }\n\n    private handleChangeRadioButton(selectedIndex: number): void {\n        this.setState({selectedTollIndex: selectedIndex});\n    }\n\n    private readonly defaultRadiobutton = 0;\n}\n\nexport default NumbersPage;","function MessagingPage(){\n    return <div>Messaging page</div>;\n}\n\nexport default MessagingPage;","function ReportingPage(){\n    return <div>Reporting page</div>;\n}\n\nexport default ReportingPage;","function ApiKeysPage(){\n    return <div>API Keys page</div>;\n}\n\nexport default ApiKeysPage;","import React from 'react';\nimport NumbersPage from './pages/Numbers/NumbersPage';\nimport MessagingPage from './pages/Messaging/MessagingPage';\nimport ReportingPage from './pages/Reporting/ReportingPage';\nimport ApiKeysPage from './pages/ApiKeys/ApiKeysPage';\n\ninterface IPageDescription {\n    get Path(): string;\n    // todo: define the type\n    get Component(): any;\n    get VisiblePhrase(): string;\n    get flaticonClass(): string;\n}\n\nconst NumbersRoute: IPageDescription = {\n    Path: \"/numbers\",\n    Component: <NumbersPage></NumbersPage>,\n    VisiblePhrase: \"Numbers\",\n    flaticonClass: \"flaticon flaticon-phone-keyboard-buttons\"\n}\n\nconst MessagingRoute: IPageDescription = {\n    Path: \"/messaging\",\n    Component: <MessagingPage></MessagingPage>,\n    VisiblePhrase: \"Messaging\",\n    flaticonClass: \"flaticon flaticon-message\"\n}\n\nconst ReportingRoute: IPageDescription = {\n    Path: \"/reporting\",\n    Component: <ReportingPage></ReportingPage>,\n    VisiblePhrase: \"Reporting\",\n    flaticonClass: \"flaticon flaticon-check-list\"\n}\n\nconst ApiKeysRoute: IPageDescription = {\n    Path: \"/apiKeys\",\n    Component: <ApiKeysPage></ApiKeysPage>,\n    VisiblePhrase: \"API Keys\",\n    flaticonClass: \"flaticon flaticon-door-key\"\n}\n\nconst routes: IPageDescription[] = [ NumbersRoute, MessagingRoute, ReportingRoute, ApiKeysRoute];\nconst defaultPage: IPageDescription = NumbersRoute;\n\nexport type { IPageDescription };\nexport { routes, defaultPage };","import { Link, useLocation } from 'react-router-dom';\n\nimport {routes} from '../routes';\n\nimport './Navigation.css';\n\nfunction Navigation(props: any){\n    const location = useLocation();\n    const elements = routes.map(r =>{\n        const classname = \"nav-link\" + (location.pathname === r.Path ? \" active\" : \"\");\n        return (<li key={r.Path} className=\"nav-item\"><Link to={r.Path} className={classname}><i className={r.flaticonClass}></i> {r.VisiblePhrase}</Link></li>);})\n    return (\n    <div className=\"navigation\">\n        <label>PLATFORM</label>\n        <nav>\n            <ul className=\"nav flex-column\">{elements}</ul>\n        </nav>\n    </div>);\n}\n\nexport default Navigation;","import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport { routes, defaultPage } from './routes';\nimport './App.css';\n\nimport Navigation from './navigation/Navigation';\n\nfunction App() {\n  const pages: any[] = routes.map(r => <Route key={r.Path} path={r.Path}>{r.Component}</Route>);\n  const title = \"Numbers\";\n  return (\n    <Router>\n      <div className=\"App container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <h3>algorithm</h3>\n          </div>\n          <div className=\"col\">\n            <h3>{title}</h3>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <Navigation></Navigation>\n          </div>\n          <div className=\"col\">\n            <Switch>\n              {pages}\n              <Route exact path=\"/\">\n                <Redirect to={defaultPage.Path} />\n              </Route>\n              <Route exact path={process.env.PUBLIC_URL}>\n                <Redirect to={defaultPage.Path} />\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </div>\n      <div className=\"container\">\n        <footer className=\"row border-top\">\n          <div className=\"col-6 hidden\"></div>\n          <div className=\"col-6\">\n            <div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\n          </div>\n        </footer>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}